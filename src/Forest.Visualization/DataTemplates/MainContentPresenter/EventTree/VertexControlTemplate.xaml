<?xml version="1.0" encoding="utf-8"?>

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:graphSharpControls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
    xmlns:wpfExtensionsAttachedBehaviours="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
    xmlns:fluent="urn:fluent-ribbon"
    xmlns:converters="clr-namespace:Forest.Visualization.Converters"
    xmlns:mainContentPanel="clr-namespace:Forest.Visualization.ViewModels.ContentPanel.MainContentPresenter.EventTree"
    xmlns:visualization="clr-namespace:Forest.Visualization">

    <converters:SelectedPropertyToColorConverter x:Key="SelectedPropertyToBrushConverter" />

    <fluent:IsNullConverter x:Key="HasTreeEventViewModelConverter" />

    <SolidColorBrush x:Key="SelectedBorderBrush" Color="DarkGray" />
    <DrawingBrush x:Key="UnSelectedBorderBrush" Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="DarkGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,50,50" />
                            <RectangleGeometry Rect="50,50,50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <converters:BooleanToBrushConverter x:Key="BooleanToBrushConverter"
                                        FalseBrush="{StaticResource UnSelectedBorderBrush}"
                                        TrueBrush="{StaticResource SelectedBorderBrush}" />

    <converters:TreeEventTypeToDisplayNameConverter x:Key="TreeEventTypeToDisplayNameConverter" />
    <visualization:TreeEventTypeToVisibilityConverter x:Key="TreeEventTypeToVisibilityConverter" />
    <DataTemplate x:Key="TreeEventDataTemplate" DataType="{x:Type mainContentPanel:TreeEventViewModel}">
            <Grid IsSharedSizeScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" SharedSizeGroup="eventSharedHeightGroup" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid
                    Width="30"
                    Visibility="{Binding TreeEventType, Converter={StaticResource TreeEventTypeToVisibilityConverter}}"
                    Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="Auto" SharedSizeGroup="descriptionHeightGroup"/>
                        <RowDefinition Height="1" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Grid.Row="1"
                        TextAlignment="Left"
                        VerticalAlignment="Bottom"
                        Padding="5,2,5,3"
                        Text="{Binding TreeEventType, Converter={StaticResource TreeEventTypeToDisplayNameConverter}}"/>
                    <Border 
                        Grid.Row="2"
                        Height="1"
                        Background="DimGray"/>
                </Grid>
                <Border
                    Grid.Column="1"
                    BorderBrush="{Binding IsSelected, Converter={StaticResource BooleanToBrushConverter}}"
                    BorderThickness="1"
                    CornerRadius="8"
                    Width="200">
                    <Border.InputBindings>
                        <MouseBinding MouseAction="LeftClick" Command="{Binding TreeEventClickedCommand}" />
                    </Border.InputBindings>
                    <Grid Width="200" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" SharedSizeGroup="descriptionHeightGroup"/>
                            <RowDefinition Height="1" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock
                            Grid.Row="0"
                            Name="TitleTextBlock"
                            TextWrapping="Wrap"
                            Text="{Binding Name}"
                            Padding="5,2,5,3"
                            VerticalAlignment="Bottom"
                            FontWeight="Bold"
                            FontSize="14" />
                        <Border
                            Grid.Row="1"
                            Height="1"
                            Background="DimGray" />
                        <TextBlock
                            Grid.Row="2"
                            Name="DescriptionTextBlock"
                            TextWrapping="Wrap"
                            Text="{Binding Summary}"
                            VerticalAlignment="Top"
                            Padding="5,2,5,3"
                            FontSize="10" />
                    </Grid>
                    <Border.Style>
                        <Style>
                            <Setter Property="Border.Background" Value="Transparent" />
                            <Style.Triggers>
                                <Trigger Property="Border.IsMouseOver" Value="True">
                                    <Setter Property="Border.Background" Value="LightGray" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
            </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FailingEndpointTemplate" DataType="mainContentPanel:GraphVertex">
        <Grid IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" SharedSizeGroup="imageHeight"/>
                <RowDefinition Height="1"/>
                <RowDefinition Height="*" SharedSizeGroup="imageHeight"/>
            </Grid.RowDefinitions>
            <TextBlock 
                Grid.Row="0"
                Grid.Column="0"
                Padding="5,2,5,3"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Text="Ja"/>
            <Border
                Grid.Column="0"
                Grid.Row="1"
                Height="1"
                Background="DimGray"/>
            <Image 
                Grid.Column="1"
                Grid.Row="0"
                Grid.RowSpan="3"
                VerticalAlignment="Center"
                Source="/Forest.Visualization;component\Resources\cross_red.png" Width="32" />
        </Grid>
        
    </DataTemplate>

    <DataTemplate x:Key="PassingEndpointTemplate" DataType="mainContentPanel:GraphVertex">
        <Grid IsSharedSizeScope="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" SharedSizeGroup="imageHeight"/>
                <RowDefinition Height="1"/>
                <RowDefinition Height="*" SharedSizeGroup="imageHeight"/>
            </Grid.RowDefinitions>
            <TextBlock 
                Grid.Row="0"
                Grid.Column="0"
                HorizontalAlignment="Left"
                VerticalAlignment="Bottom"
                Padding="5,2,5,3"
                Text="Nee"/>
            <Border
                Grid.Column="0"
                Grid.Row="1"
                Height="1"
                Background="DimGray"/>
            <Image 
                Grid.Column="1"
                Grid.Row="0"
                Grid.RowSpan="3"
                VerticalAlignment="Center"
                Source="/Forest.Visualization;component\Resources\check_green.png" Width="32" />
        </Grid>
    </DataTemplate>

    <Style TargetType="{x:Type graphSharpControls:VertexControl}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding TreeEventViewModel, Converter={StaticResource HasTreeEventViewModelConverter}}"
                Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <ContentPresenter Content="{Binding TreeEventViewModel}"
                                              ContentTemplate="{StaticResource TreeEventDataTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsFailingEndPoint}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <ContentPresenter Content="{Binding }"
                                              ContentTemplate="{StaticResource FailingEndpointTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPassingEndPoint}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <ContentPresenter Content="{Binding }"
                                              ContentTemplate="{StaticResource PassingEndpointTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="wpfExtensionsAttachedBehaviours:DragBehaviour.IsDragEnabled" Value="False" />
    </Style>
</ResourceDictionary>