<?xml version="1.0" encoding="utf-8"?>

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:graphSharpControls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
    xmlns:wpfExtensionsAttachedBehaviours="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
    xmlns:converters="clr-namespace:Forest.Gui.Converters"
    xmlns:viewModels="clr-namespace:Forest.Gui.ViewModels"
    xmlns:fluent="urn:fluent-ribbon"
    xmlns:gui="clr-namespace:Forest.Gui">

    <converters:SelectedPropertyToColorConverter x:Key="SelectedPropertyToBrushConverter" />

    <fluent:IsNullConverter x:Key="HasTreeEventViewModelConverter" />

    <SolidColorBrush x:Key="SelectedBorderBrush" Color="DarkGray" />
    <DrawingBrush x:Key="UnSelectedBorderBrush" Viewport="0,0,8,8" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="DarkGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,50,50" />
                            <RectangleGeometry Rect="50,50,50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <gui:BooleanBrushConverter x:Key="BooleanToBrushConverter"
                               FalseBrush="{StaticResource UnSelectedBorderBrush}"
                               TrueBrush="{StaticResource SelectedBorderBrush}" />

    <DataTemplate x:Key="TreeEventDataTemplate" DataType="viewModels:TreeEventViewModel">
        <Grid Width="200" IsSharedSizeScope="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" SharedSizeGroup="eventSharedHeightGroup" />
            </Grid.RowDefinitions>
            <Border
                BorderBrush="{StaticResource UnSelectedBorderBrush}"
                BorderThickness="1"
                CornerRadius="8"
                MaxWidth="300">
                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding TreeEventClickedCommand}" />
                </Border.InputBindings>
                <Grid MinWidth="120" MaxWidth="320" Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="1" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock
                        Name="TitleTextBlock"
                        TextWrapping="Wrap"
                        Grid.Row="0"
                        Text="{Binding Name}"
                        Padding="5,2,5,3"
                        VerticalAlignment="Bottom"
                        FontWeight="Bold"
                        FontSize="14" />
                    <Border
                        Grid.Row="1"
                        Height="1"
                        Background="DimGray" />
                    <TextBlock
                        Name="DescriptionTextBlock"
                        TextWrapping="Wrap"
                        Grid.Row="2"
                        Text="{Binding Summary}"
                        VerticalAlignment="Top"
                        Padding="5,2,5,3"
                        FontSize="10" />
                </Grid>
                <Border.Style>
                    <Style>
                        <Setter Property="Border.Background" Value="Transparent" />
                        <Style.Triggers>
                            <Trigger Property="Border.IsMouseOver" Value="True">
                                <Setter Property="Border.Background" Value="LightGray" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FailingEndpointTemplate" DataType="viewModels:GraphVertex">
        <Image Source="/Forest.Gui;component\Resources\cross_red.png" Width="32" />
    </DataTemplate>

    <DataTemplate x:Key="PassingEndpointTemplate" DataType="viewModels:GraphVertex">
        <Image Source="/Forest.Gui;component\Resources\check_green.png" Width="32" />
    </DataTemplate>

    <Style TargetType="{x:Type graphSharpControls:VertexControl}">
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding TreeEventViewModel, Converter={StaticResource HasTreeEventViewModelConverter}}"
                Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <ContentPresenter Content="{Binding TreeEventViewModel}"
                                              ContentTemplate="{StaticResource TreeEventDataTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsFailingEndPoint}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <ContentPresenter Content="{Binding }"
                                              ContentTemplate="{StaticResource FailingEndpointTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPassingEndPoint}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <ContentPresenter Content="{Binding }"
                                              ContentTemplate="{StaticResource PassingEndpointTemplate}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="wpfExtensionsAttachedBehaviours:DragBehaviour.IsDragEnabled" Value="False" />
    </Style>
</ResourceDictionary>