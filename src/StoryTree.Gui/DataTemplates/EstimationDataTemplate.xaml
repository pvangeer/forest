<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModels="clr-namespace:StoryTree.Gui.ViewModels"
                    xmlns:gui="clr-namespace:StoryTree.Gui">
    <gui:SelectedPropertyToColorConverter x:Key="SelectedPropertyToBrushConverter" />

    <DataTemplate x:Key="ChoiceNodeTemplate" DataType="viewModels:TreeEventViewModel">
        <Border Background="DarkGray" BorderBrush="{Binding Selected, Converter={StaticResource SelectedPropertyToBrushConverter}}" BorderThickness="1">
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding TreeEventClickedCommand}"></MouseBinding>
            </Border.InputBindings>
            <Grid Width="120">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="{Binding Name}" Padding="1,2,1,3" FontWeight="Bold" FontSize="14"></TextBlock>
                <TextBlock Grid.Row="1" Text="{Binding Description}" Padding="1,2,1,3" FontSize="10"></TextBlock>
                <Grid.Style>
                    <Style>
                        <Style.Triggers>
                            <Trigger Property="Grid.IsMouseOver" Value="True">
                                <Setter Property="Grid.Background" Value="DarkSeaGreen"></Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="FalseEndPointTemplate" DataType="viewModels:TreeEventViewModel">
        <TextBlock Text="Falen" Background="LightCoral" Height="50"/>
    </DataTemplate>

    <DataTemplate x:Key="TrueEndPointTemplate" DataType="viewModels:TreeEventViewModel">
        <TextBlock Text="Niet falen" Background="DarkSeaGreen" Height="50"/>
    </DataTemplate>

    <DataTemplate x:Key="EndEventTemplate" DataType="viewModels:TreeEventViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="30"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
            </Grid.RowDefinitions>
            <ContentPresenter Grid.Row="1" Grid.Column="0" ContentTemplate="{DynamicResource ChoiceNodeTemplate}" Content="{Binding}"></ContentPresenter>
            <ContentPresenter Grid.Row="0" Grid.Column="2" ContentTemplate="{DynamicResource FalseEndPointTemplate}" Content="{Binding}"></ContentPresenter>
            <ContentPresenter Grid.Row="2" Grid.Column="2" ContentTemplate="{DynamicResource TrueEndPointTemplate}" Content="{Binding}"></ContentPresenter>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="FalseEventOnlyTemplate" DataType="viewModels:TreeEventViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="30"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
            </Grid.RowDefinitions>
            <ContentPresenter Grid.Row="1" Grid.Column="0" ContentTemplate="{DynamicResource ChoiceNodeTemplate}" Content="{Binding}"></ContentPresenter>
            <ContentControl Grid.Row="0" Grid.Column="2" DataContext="{Binding FailingEvent}" Content="{Binding }" ContentTemplate="{DynamicResource TemplateSwitch}"/>
            <Grid Grid.Row="2" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" ContentTemplate="{DynamicResource TrueEndPointTemplate}" Content="{Binding}"></ContentPresenter>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TrueEventOnlyTemplate" DataType="viewModels:TreeEventViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="30"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
            </Grid.RowDefinitions>
            <ContentPresenter Grid.Row="1" Grid.Column="0" ContentTemplate="{DynamicResource ChoiceNodeTemplate}" Content="{Binding}"></ContentPresenter>
            <Grid Grid.Row="0" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" ContentTemplate="{DynamicResource FalseEndPointTemplate}" Content="{Binding}"></ContentPresenter>
            </Grid>
            <ContentControl Grid.Row="2" Grid.Column="2" DataContext="{Binding PassingEvent}" Content="{Binding }" ContentTemplate="{DynamicResource TemplateSwitch}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TwoEventsTemplate" DataType="viewModels:TreeEventViewModel">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="30"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
            </Grid.RowDefinitions>
            <ContentPresenter Grid.Row="1" Grid.Column="0" ContentTemplate="{DynamicResource ChoiceNodeTemplate}" Content="{Binding}"></ContentPresenter>
            <ContentControl Grid.Row="0" Grid.Column="2" DataContext="{Binding FailingEvent}" Content="{Binding }" ContentTemplate="{DynamicResource TemplateSwitch}"/>
            <ContentControl Grid.Row="2" Grid.Column="2" DataContext="{Binding PassingEvent}" Content="{Binding }" ContentTemplate="{DynamicResource TemplateSwitch}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="TemplateSwitch" DataType="viewModels:TreeEventViewModel">
        <ContentControl>
            <ContentControl.Style>
                <Style TargetType="{x:Type ContentControl}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HasTrueEventOnly}" Value="True">
                            <Setter Property="ContentTemplate" Value="{DynamicResource TrueEventOnlyTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HasFalseEventOnly}" Value="True">
                            <Setter Property="ContentTemplate" Value="{DynamicResource FalseEventOnlyTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding HasTwoEvents}" Value="True">
                            <Setter Property="ContentTemplate" Value="{DynamicResource TwoEventsTemplate}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEndPointEvent}" Value="True">
                            <Setter Property="ContentTemplate" Value="{DynamicResource EndEventTemplate}" />
                        </DataTrigger>
                    </Style.Triggers>
                    <Setter Property="Content" Value="{Binding }"></Setter>
                </Style>
            </ContentControl.Style>
        </ContentControl>
    </DataTemplate>

    <gui:SelectedItemToMainTreeEventViewModelConverter x:Key="SelectedItemToMainTreeEventViewModelConverter" />
    <DataTemplate x:Key="EstimationDataTemplate" DataType="viewModels:ProjectViewModel">
        <DataTemplate.Resources>
            <gui:SelectedPropertyToColorConverter x:Key="SelectedPropertyToBrushConverter" />
            <gui:ContentTemplateSelector x:Key="ContentTemplateSelector" />
        </DataTemplate.Resources>

        <Grid ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="100"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*" MinWidth="150"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="Auto" MinWidth="100"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" Width="10"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   />
            <GridSplitter Grid.Column="3" Width="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  />
            <ListView 
            x:Name="ListView" 
            Grid.Column="0" 
            ItemsSource="{Binding EventTrees}" 
            SelectedIndex="0"
            SelectedItem="{Binding SelectedEventTree}"
            HorizontalContentAlignment="Stretch"
            BorderThickness="0">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="{Binding Selected, Converter={StaticResource SelectedPropertyToBrushConverter}}" BorderThickness="1" Margin="0,1,0,1">
                            <Grid>
                                <TextBlock Text="{Binding Name}" Padding="5" Margin="0,0,0,0" Background="Gainsboro">
                                </TextBlock>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <ContentPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="15"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Text="{Binding SelectedEventTree.Name}" TextAlignment="Center" FontWeight="Bold"></TextBlock>
                <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <!--TODO: Replace template switch by TemplateSelector and use ContentPresenter-->
                    <ContentControl 
                        Margin="10" 
                        DataContext="{Binding SelectedItem, ElementName=ListView, Converter={StaticResource SelectedItemToMainTreeEventViewModelConverter}}" 
                        Content="{Binding }" 
                        ContentTemplate="{DynamicResource TemplateSwitch}"/>
                </ScrollViewer>
            </Grid>
            <ContentPresenter Grid.Column="4" Content="{Binding SelectedObject}" ContentTemplateSelector="{StaticResource ContentTemplateSelector}">
                <ContentPresenter.Resources>
                    <DataTemplate x:Key="EventTreePropertiesTemplate" DataType="{x:Type viewModels:EventTreeViewModel}">
                        <Grid Background="Azure">
                            <TextBox Text="{Binding Name, Mode=TwoWay}" Background="Aquamarine"></TextBox>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate x:Key="TreeEventPropertiesTemplate" DataType="{x:Type viewModels:TreeEventViewModel}">
                        <StackPanel>
                            <TextBox Text="{Binding Name, Mode=TwoWay}" Background="BlanchedAlmond"></TextBox>
                            <TextBlock Text="TreeEvent"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ContentPresenter.Resources>
            </ContentPresenter>
        </Grid>
    </DataTemplate>

</ResourceDictionary>