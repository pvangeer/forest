<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:graphSharpControls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
    xmlns:wpfExtensionsAttachedBehaviours="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
    xmlns:converters="clr-namespace:StoryTree.Gui.Converters"
    xmlns:viewModels="clr-namespace:StoryTree.Gui.ViewModels"
    xmlns:fluent="urn:fluent-ribbon">

    <converters:SelectedPropertyToColorConverter x:Key="SelectedPropertyToBrushConverter" />

    <fluent:IsNullConverter x:Key="HasTreeEventViewModelConverter" />

    <DataTemplate x:Key="TreeEventDataTemplate" DataType="viewModels:TreeEventViewModel">
        <Border Background="DarkGray" BorderBrush="{Binding IsSelected, Converter={StaticResource SelectedPropertyToBrushConverter}}" BorderThickness="1">
            <Border.InputBindings>
                <MouseBinding MouseAction="LeftClick" Command="{Binding TreeEventClickedCommand}" />
            </Border.InputBindings>
            <Grid MinWidth="120" MaxWidth="320">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock TextWrapping="Wrap" Grid.Row="0" Text="{Binding Name}" Padding="1,2,1,3" FontWeight="Bold" FontSize="14" />
                <TextBlock TextWrapping="Wrap" Grid.Row="1" Text="{Binding Summary}" Padding="1,2,1,3" FontSize="10" />
                <Grid.Style>
                    <Style>
                        <Style.Triggers>
                            <Trigger Property="Grid.IsMouseOver" Value="True">
                                <Setter Property="Grid.Background" Value="DarkSeaGreen" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="FailingEndpointTemplate" DataType="viewModels:GraphVertex">
        <TextBlock Text="Falen" Background="LightCoral" Height="50"/>
    </DataTemplate>

    <DataTemplate x:Key="PassingEndpointTemplate" DataType="viewModels:GraphVertex">
        <TextBlock Text="Niet falen" Background="DarkSeaGreen" Height="50"/>
    </DataTemplate>

    <Style TargetType="{x:Type graphSharpControls:VertexControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding TreeEventViewModel, Converter={StaticResource HasTreeEventViewModelConverter}}" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <ContentPresenter Content="{Binding TreeEventViewModel}" ContentTemplate="{StaticResource TreeEventDataTemplate}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsFailingEndPoint}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <ContentPresenter Content="{Binding }" ContentTemplate="{StaticResource FailingEndpointTemplate}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPassingEndPoint}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <ContentPresenter Content="{Binding }" ContentTemplate="{StaticResource PassingEndpointTemplate}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="wpfExtensionsAttachedBehaviours:DragBehaviour.IsDragEnabled" Value="False"/>
    </Style>
</ResourceDictionary>