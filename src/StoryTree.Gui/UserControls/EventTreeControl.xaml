<UserControl x:Class="StoryTree.Gui.UserControls.EventTreeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:StoryTree.Gui.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.DataContext>
        <viewModels:EventTreeViewModel></viewModels:EventTreeViewModel>
    </UserControl.DataContext>
    <UserControl.Resources>
        <DataTemplate x:Key="ChoiceNodeTemplate" DataType="viewModels:TreeEventViewModel">
            <Border Background="DarkGray">
                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftClick" Command="{Binding TreeEventClickedCommand}"></MouseBinding>
                </Border.InputBindings>
                <Grid Width="120">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{Binding Name}" Padding="1,2,1,3" FontWeight="Bold" FontSize="14"></TextBlock>
                    <TextBlock Grid.Row="1" Text="{Binding Description}" Padding="1,2,1,3" FontSize="10"></TextBlock>
                    <Grid.Style>
                        <Style>
                            <Style.Triggers>
                                <Trigger Property="Grid.IsMouseOver" Value="True">
                                    <Setter Property="Grid.Background" Value="DarkSeaGreen"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                </Grid>
            </Border>
        </DataTemplate>
        
        <DataTemplate x:Key="FalseEndPointTemplate" DataType="viewModels:TreeEventViewModel">
            <TextBlock Text="Falen" Background="LightCoral" Height="50"/>
        </DataTemplate>

        <DataTemplate x:Key="TrueEndPointTemplate" DataType="viewModels:TreeEventViewModel">
            <TextBlock Text="Niet falen" Background="DarkSeaGreen" Height="50"/>
        </DataTemplate>

        <DataTemplate x:Key="EndEventTemplate" DataType="viewModels:TreeEventViewModel">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                </Grid.RowDefinitions>
                <ContentPresenter Grid.Row="1" Grid.Column="0" ContentTemplate="{DynamicResource ChoiceNodeTemplate}" Content="{Binding}"></ContentPresenter>
                <ContentPresenter Grid.Row="0" Grid.Column="2" ContentTemplate="{DynamicResource FalseEndPointTemplate}" Content="{Binding}"></ContentPresenter>
                <ContentPresenter Grid.Row="2" Grid.Column="2" ContentTemplate="{DynamicResource TrueEndPointTemplate}" Content="{Binding}"></ContentPresenter>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="FalseEventOnlyTemplate" DataType="viewModels:TreeEventViewModel">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                </Grid.RowDefinitions>
                <ContentPresenter Grid.Row="1" Grid.Column="0" ContentTemplate="{DynamicResource ChoiceNodeTemplate}" Content="{Binding}"></ContentPresenter>
                <ContentControl Grid.Row="0" Grid.Column="2" DataContext="{Binding FailingEvent}" Content="{Binding }" ContentTemplate="{DynamicResource TemplateSwitch}"/>
                <ContentPresenter Grid.Row="2" Grid.Column="2" ContentTemplate="{DynamicResource TrueEndPointTemplate}" Content="{Binding}"></ContentPresenter>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TrueEventOnlyTemplate" DataType="viewModels:TreeEventViewModel">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                </Grid.RowDefinitions>
                <ContentPresenter Grid.Row="1" Grid.Column="0" ContentTemplate="{DynamicResource ChoiceNodeTemplate}" Content="{Binding}"></ContentPresenter>
                <ContentPresenter Grid.Row="0" Grid.Column="2" ContentTemplate="{DynamicResource FalseEndPointTemplate}" Content="{Binding}"></ContentPresenter>
                <ContentControl Grid.Row="2" Grid.Column="2" DataContext="{Binding PassingEvent}" Content="{Binding }" ContentTemplate="{DynamicResource TemplateSwitch}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TwoEventsTemplate" DataType="viewModels:TreeEventViewModel">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                    <RowDefinition Height="Auto" MinHeight="30"></RowDefinition>
                </Grid.RowDefinitions>
                <ContentPresenter Grid.Row="1" Grid.Column="0" ContentTemplate="{DynamicResource ChoiceNodeTemplate}" Content="{Binding}"></ContentPresenter>
                <ContentControl Grid.Row="0" Grid.Column="2" DataContext="{Binding FailingEvent}" Content="{Binding }" ContentTemplate="{DynamicResource TemplateSwitch}"/>
                <ContentControl Grid.Row="2" Grid.Column="2" DataContext="{Binding PassingEvent}" Content="{Binding }" ContentTemplate="{DynamicResource TemplateSwitch}"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TemplateSwitch" DataType="viewModels:TreeEventViewModel">
            <ContentControl>
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasTrueEventOnly}" Value="True">
                                <Setter Property="ContentTemplate" Value="{DynamicResource TrueEventOnlyTemplate}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasFalseEventOnly}" Value="True">
                                <Setter Property="ContentTemplate" Value="{DynamicResource FalseEventOnlyTemplate}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasTwoEvents}" Value="True">
                                <Setter Property="ContentTemplate" Value="{DynamicResource TwoEventsTemplate}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsEndPointEvent}" Value="True">
                                <Setter Property="ContentTemplate" Value="{DynamicResource EndEventTemplate}" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Content" Value="{Binding }"></Setter>
                        <Setter Property="DataContext" Value="{Binding }"></Setter>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <ContentControl Margin="10" DataContext="{Binding MainTreeEventViewModel}" Content="{Binding }" ContentTemplate="{DynamicResource TemplateSwitch}"/>
    </Grid>
</UserControl>

